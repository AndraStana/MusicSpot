// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LibraryServices.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MusicMicroservice {
  public static partial class LibraryGrpcService
  {
    static readonly string __ServiceName = "LibraryGrpcService";

    static readonly grpc::Marshaller<global::MusicMicroservice.AddLibraryRequest> __Marshaller_AddLibraryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.AddLibraryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.AddLibraryResponse> __Marshaller_AddLibraryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.AddLibraryResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.GetLibrarySongsRequest> __Marshaller_GetLibrarySongsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.GetLibrarySongsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.GetLibrarySongsResponse> __Marshaller_GetLibrarySongsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.GetLibrarySongsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.GetPopularityRankingRequest> __Marshaller_GetPopularityRankingRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.GetPopularityRankingRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.GetPopularityRankingResponse> __Marshaller_GetPopularityRankingResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.GetPopularityRankingResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.AddSongToLibraryRequest> __Marshaller_AddSongToLibraryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.AddSongToLibraryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.AddSongToLibraryResponse> __Marshaller_AddSongToLibraryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.AddSongToLibraryResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.RemoveSongFromLibraryRequest> __Marshaller_RemoveSongFromLibraryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.RemoveSongFromLibraryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MusicMicroservice.RemoveSongFromLibraryResponse> __Marshaller_RemoveSongFromLibraryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MusicMicroservice.RemoveSongFromLibraryResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::MusicMicroservice.AddLibraryRequest, global::MusicMicroservice.AddLibraryResponse> __Method_AddLibrary = new grpc::Method<global::MusicMicroservice.AddLibraryRequest, global::MusicMicroservice.AddLibraryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddLibrary",
        __Marshaller_AddLibraryRequest,
        __Marshaller_AddLibraryResponse);

    static readonly grpc::Method<global::MusicMicroservice.GetLibrarySongsRequest, global::MusicMicroservice.GetLibrarySongsResponse> __Method_GetLibrarySongs = new grpc::Method<global::MusicMicroservice.GetLibrarySongsRequest, global::MusicMicroservice.GetLibrarySongsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLibrarySongs",
        __Marshaller_GetLibrarySongsRequest,
        __Marshaller_GetLibrarySongsResponse);

    static readonly grpc::Method<global::MusicMicroservice.GetPopularityRankingRequest, global::MusicMicroservice.GetPopularityRankingResponse> __Method_GetPopularityRankings = new grpc::Method<global::MusicMicroservice.GetPopularityRankingRequest, global::MusicMicroservice.GetPopularityRankingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPopularityRankings",
        __Marshaller_GetPopularityRankingRequest,
        __Marshaller_GetPopularityRankingResponse);

    static readonly grpc::Method<global::MusicMicroservice.AddSongToLibraryRequest, global::MusicMicroservice.AddSongToLibraryResponse> __Method_AddSongToLibrary = new grpc::Method<global::MusicMicroservice.AddSongToLibraryRequest, global::MusicMicroservice.AddSongToLibraryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSongToLibrary",
        __Marshaller_AddSongToLibraryRequest,
        __Marshaller_AddSongToLibraryResponse);

    static readonly grpc::Method<global::MusicMicroservice.RemoveSongFromLibraryRequest, global::MusicMicroservice.RemoveSongFromLibraryResponse> __Method_RemoveSongFromLibrary = new grpc::Method<global::MusicMicroservice.RemoveSongFromLibraryRequest, global::MusicMicroservice.RemoveSongFromLibraryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveSongFromLibrary",
        __Marshaller_RemoveSongFromLibraryRequest,
        __Marshaller_RemoveSongFromLibraryResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MusicMicroservice.LibraryServicesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for LibraryGrpcService</summary>
    public partial class LibraryGrpcServiceClient : grpc::ClientBase<LibraryGrpcServiceClient>
    {
      /// <summary>Creates a new client for LibraryGrpcService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public LibraryGrpcServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LibraryGrpcService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public LibraryGrpcServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected LibraryGrpcServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected LibraryGrpcServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::MusicMicroservice.AddLibraryResponse AddLibrary(global::MusicMicroservice.AddLibraryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLibrary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MusicMicroservice.AddLibraryResponse AddLibrary(global::MusicMicroservice.AddLibraryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddLibrary, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.AddLibraryResponse> AddLibraryAsync(global::MusicMicroservice.AddLibraryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLibraryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.AddLibraryResponse> AddLibraryAsync(global::MusicMicroservice.AddLibraryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddLibrary, null, options, request);
      }
      public virtual global::MusicMicroservice.GetLibrarySongsResponse GetLibrarySongs(global::MusicMicroservice.GetLibrarySongsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLibrarySongs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MusicMicroservice.GetLibrarySongsResponse GetLibrarySongs(global::MusicMicroservice.GetLibrarySongsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLibrarySongs, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.GetLibrarySongsResponse> GetLibrarySongsAsync(global::MusicMicroservice.GetLibrarySongsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLibrarySongsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.GetLibrarySongsResponse> GetLibrarySongsAsync(global::MusicMicroservice.GetLibrarySongsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLibrarySongs, null, options, request);
      }
      public virtual global::MusicMicroservice.GetPopularityRankingResponse GetPopularityRankings(global::MusicMicroservice.GetPopularityRankingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPopularityRankings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MusicMicroservice.GetPopularityRankingResponse GetPopularityRankings(global::MusicMicroservice.GetPopularityRankingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPopularityRankings, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.GetPopularityRankingResponse> GetPopularityRankingsAsync(global::MusicMicroservice.GetPopularityRankingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPopularityRankingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.GetPopularityRankingResponse> GetPopularityRankingsAsync(global::MusicMicroservice.GetPopularityRankingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPopularityRankings, null, options, request);
      }
      public virtual global::MusicMicroservice.AddSongToLibraryResponse AddSongToLibrary(global::MusicMicroservice.AddSongToLibraryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSongToLibrary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MusicMicroservice.AddSongToLibraryResponse AddSongToLibrary(global::MusicMicroservice.AddSongToLibraryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSongToLibrary, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.AddSongToLibraryResponse> AddSongToLibraryAsync(global::MusicMicroservice.AddSongToLibraryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSongToLibraryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.AddSongToLibraryResponse> AddSongToLibraryAsync(global::MusicMicroservice.AddSongToLibraryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSongToLibrary, null, options, request);
      }
      public virtual global::MusicMicroservice.RemoveSongFromLibraryResponse RemoveSongFromLibrary(global::MusicMicroservice.RemoveSongFromLibraryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSongFromLibrary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MusicMicroservice.RemoveSongFromLibraryResponse RemoveSongFromLibrary(global::MusicMicroservice.RemoveSongFromLibraryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveSongFromLibrary, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.RemoveSongFromLibraryResponse> RemoveSongFromLibraryAsync(global::MusicMicroservice.RemoveSongFromLibraryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSongFromLibraryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MusicMicroservice.RemoveSongFromLibraryResponse> RemoveSongFromLibraryAsync(global::MusicMicroservice.RemoveSongFromLibraryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveSongFromLibrary, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override LibraryGrpcServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LibraryGrpcServiceClient(configuration);
      }
    }

  }
}
#endregion
